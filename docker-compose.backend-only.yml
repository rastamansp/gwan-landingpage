version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: gwan-backend-test
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/gwan_vector
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
    depends_on:
      - postgres
    networks:
      - gwan-network
    ports:
      - "3001:3001"

  postgres:
    image: postgres:15-alpine
    container_name: gwan-postgres-test
    restart: unless-stopped
    environment:
      - POSTGRES_DB=gwan_vector
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    networks:
      - gwan-network
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: gwan-minio-test
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data_test:/data
    networks:
      - gwan-network
    ports:
      - "9000:9000"
      - "9001:9001"

  redis:
    image: redis:7-alpine
    container_name: gwan-redis-test
    restart: unless-stopped
    networks:
      - gwan-network
    ports:
      - "6379:6379"

networks:
  gwan-network:
    external: true

volumes:
  postgres_data_test:
  minio_data_test: 